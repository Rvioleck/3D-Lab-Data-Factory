@startuml
title 图片上传方案三：状态标记 + 定期清理

actor "用户" as User
participant "前端应用" as Frontend
participant "后端服务" as Backend
database "数据库 (MySQL)" as DB
participant "对象存储 (COS)" as Cloud
participant "定时任务" as Scheduler

skinparam sequenceMessageAlign center

activate Frontend
activate User

== 用户操作 ==
User -> Frontend : 选择图片并提交
Frontend -> Backend ++ : POST /picture/upload\n(图片文件, 元数据)
note over Backend : 验证用户身份和文件参数

== 数据库操作 ==
Backend -> Backend : 生成唯一文件名和路径
Backend -> Backend : 构建文件URL
Backend -> DB ++ : 创建记录(状态="待上传")
DB --> Backend -- : 返回记录ID

== 云存储操作 ==
Backend -> Cloud ++ : 上传文件
Cloud --> Backend -- : 上传成功
Backend -> DB ++ : 更新状态(状态="已上传")
DB --> Backend --

== 响应用户 ==
Backend --> Frontend -- : 返回成功响应(图片ID/URL)
Frontend --> User : 显示上传成功

deactivate User
deactivate Frontend

== 定期清理（异步执行） ==
note over Scheduler : 定时执行（如每小时）
activate Scheduler
Scheduler -> DB ++ : 查询长时间处于"待上传"状态的记录
DB --> Scheduler -- : 返回待处理记录列表

loop 对每条待处理记录
    Scheduler -> Cloud ++ : 检查文件是否存在
    Cloud --> Scheduler -- : 返回检查结果

    alt 文件存在
        Scheduler -> DB ++ : 更新状态(状态="已上传")
        DB --> Scheduler -- : 更新成功
    else 文件不存在
        Scheduler -> Cloud ++ : 尝试重新上传
        Cloud --> Scheduler -- : 上传结果

        alt 上传成功
            Scheduler -> DB ++ : 更新状态(状态="已上传")
            DB --> Scheduler -- : 更新成功
        else 多次失败
            Scheduler -> DB ++ : 删除记录或标记为失败
            DB --> Scheduler -- : 操作成功
        end
    end
end

deactivate Scheduler

@enduml